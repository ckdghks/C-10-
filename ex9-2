#include <iostream>
using namespace std;

class Base {
  public:
    virtual void f() { cout << "Base::f() called" << endl; }
};

class Derived : public Base {
  public:
    virtual void f() { cout << "Derived::f() called" << endl; }
};

int main() {
  Derived d, *pDer;
  pDer = &d;
  pDer->f();

  Base *pBase;
  pBase = pDer; // 업 캐스팅
  pBase->f();   // 동적 바인딩 발생!! Derived::f() 실행
}

 clang++-7 -pthread -std=c++17 -o main main.cpp
 ./main
Derived::f() called
Derived::f() called
 