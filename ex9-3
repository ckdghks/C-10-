#include <iostream>
using namespace std;

class Base {
  public:
    virtual void f() { cout << "Base::f() called" << endl; }
};

class Derived : public Base {
  public:
    void f() { cout << "Derived::f() called" << endl; }
};

class GreandDerived : public Derived {
  public:
    void f() { cout << "GrandDerived::f() called" << endl; }
};

int main() {
  GreandDerived g;
  Base *bp;
  Derived *dp;
  GreandDerived *gp;

  bp = dp = gp = &g;

  bp->f();
  dp->f();
  gp->f();
}

 clang++-7 -pthread -std=c++17 -o main main.cpp
 ./main
GrandDerived::f() called
GrandDerived::f() called
GrandDerived::f() called
 